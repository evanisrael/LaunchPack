// llp-chute-dragon.cfg v0.9.99.0
// Launch Pack (LLP)
// created: 07 Dec 2014
// updated: 13 Mar 2023

// this file: CC BY-ND 4.0 by Lazarus Luan and zer0Kerbal
PART
{
	name = llp-chute-dragon
	oldName = LazTekDragonChute
	module = Part
	author = Lazarus Luan and zer0Kerbal

	MODEL { model = LazTek/LaunchPack/Assets/llp-chute-dragon }
	scale = 1.0
	rescaleFactor = 0.85
	bulkheadProfiles = srf

	attachRules = 0,1,0,0,1
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0

	sound_parachute_open = activate
	sound_parachute_single = deploy

	TechRequired = fieldScience
	entryCost = 7000
	cost = 700
	category = Utility
	subcategory = 0

	title = Dragon 2 Parachute
	manufacturer = #LTD-Agency-titl
	description = An emergency parachute designed to be attached to the aft side of the SpaceX Dragon spacecraft.
	tags = #autoLOC_500935 // arrest canopy chute decel descen drag drogue entry fall landing orange re- return safe slow stab

	mass = 0.01

	buoyancyUseCubeNamed = PACKED

	dragModelType = default
	angularDrag = .3 // 1

	crashTolerance = 18 // 12
	breakingForce = 100
	breakingTorque = 50

	maxTemp = 2500
	emissiveConstant = 0.7
	bodyLiftMultiplier = 0

	stageOffset = -1
	preferredStage = PARACHUTESTAGE
	stagingIcon = PARACHUTES

	MODULE
	{
		name = ModuleParachute
		invertCanopy = True
		autoCutSpeed = 0.3
		capName = Cap
		canopyName = Canopy
		semiDeployedAnimation = semiDeploy
		fullyDeployedAnimation = fullyDeploy
		stowedDrag = 0.1
		semiDeployedDrag = 30
		fullyDeployedDrag = 9000
		minAirPressureToOpen = 0.01
		deployAltitude = 500
		deploymentSpeed = 1
		semiDeploymentSpeed = 1
			chuteMaxTemp = 1600
			machHeatMultBase = 0.25
			chuteThermalMassPerArea = 0.09
	}

	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = SEMIDEPLOYED
		dragModifier = 0.67
	}

	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = DEPLOYED
		dragModifier = 3.5
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 8
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.2
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.02
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 1000
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 500
			body = _Home
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}

}