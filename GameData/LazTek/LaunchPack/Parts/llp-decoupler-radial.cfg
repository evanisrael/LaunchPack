// llp-decoupler-radial.cfg v0.9.99.0
// Launch Pack (LLP)
// created: 07 Dec 2014
// updated: 13 Mar 2023

// this file: CC BY-ND 4.0 by Lazarus Luan and zer0Kerbal
PART
{
	name = llp-decoupler-radial
	oldName = FalconRadialDecoupler
	module = Part
	author = Lazarus Luan and zer0Kerbal

	MODEL { model = LazTek/LaunchPack/Assets/llp-decoupler-radial }
	scale = 1.0
	rescaleFactor = 0.85
	bulkheadProfiles = srf

	attachRules = 0,1,0,1,0
	node_attach = 0.17, 0.0, 0.0, 1.0, 0.0, 0.0, 1, 1

	sound_decoupler_fire = decouple
	fx_gasBurst_white = 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, decouple

	TechRequired = veryHeavyRocketry
	entryCost = 16000
	cost = 260
	category = Coupling
	subcategory = 0

	title = #LLP-decoupler-radial-titl
	manufacturer = #LTD-Agency-titl
	description = #LLP-decoupler-radial-desc
	tags = #autoLOC_500816 // break decouple separat split stag

	mass = 0.25
	fuelCrossFeed = False

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1

	crashTolerance = 12

	maxTemp = 2000

	stageOffset = 1
	childStageOffset = 1
	stagingIcon = DECOUPLER_HOR

	MODULE
	{
		name = ModuleAnchoredDecoupler
		anchorName = anchor
		ejectionForce = 1000
		ejectionForcePercent = 100
		explosiveNodeID = srf
		fxGroupName = decouple
		staged = True
		stagingEnabled = True
		menuName = #autoLOC_6001443 // Decouple
		stagingEnableText = #autoLOC_240328 // Decoupler: Enable Staging
		stagingDisableText = #autoLOC_240329 // Decoupler: Disable Staging
		stagingToggleEnabledEditor = True
		stagingToggleEnabledFlight = True
	}
	
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
		techRequired = fuelSystems
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}

}